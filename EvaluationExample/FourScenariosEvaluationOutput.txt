> #### Evaluation EXAMPLE STARTS HERE ####
> 
> ### Helper functions ###
> 
> # Helper function similar to the bindColums found in FuzzyAHP library, it binds FuzzyData
> # objects together into a single FuzzyData object by the rows
> bindRows <- function(data1, data2) {
+   fnMin = rbind(data1@fnMin, data2@fnMin)
+   fnModal = rbind(data1@fnModal, data2@fnModal)
+   fnMax = rbind(data1@fnMax, data2@fnMax)
+   
+   return(new("FuzzyData", fnMin = fnMin, fnModal = fnModal, fnMax = fnMax))
+ }
> 
> # Helper function that converts a FuzzyWeights class to a FuzzyData class
> convertFuzzyWeightsToFuzzyData <- function(fuzzyWeights) {
+   
+   for (fuzzyNumber in 1:length(fuzzyWeights@fnMin)){
+     # Extracting fnMin, fnModal and fnMax from FuzzyWeights
+     fnMinFuzzyWeights = matrix(fuzzyWeights@fnMin[c(fuzzyNumber)], nrow = 1, ncol = 1)
+     fnModalFuzzyWeights = matrix(fuzzyWeights@fnModal[c(fuzzyNumber)], nrow = 1, ncol = 1)
+     fnMaxFuzzyWeights = matrix(fuzzyWeights@fnMax[c(fuzzyNumber)], nrow = 1, ncol = 1)
+     
+     # Constructing the FuzzyData class
+     tmpFuzzyData <- new("FuzzyData", fnMin=fnMinFuzzyWeights, fnModal=fnModalFuzzyWeights, fnMax=fnMaxFuzzyWeights)
+     
+     if(fuzzyNumber > 1){
+       completeFuzzyData = bindRows(completeFuzzyData, tmpFuzzyData)
+     }
+     else {
+       completeFuzzyData = tmpFuzzyData
+     }
+   }
+   result <- completeFuzzyData
+ }
> 
> # Helper function that does the following:
> # 1. Creates a matrix from the received values
> # 2. Turns the matrix into a pairwise comparison matrix
> # 3. Fuzzyfying the pairwise comparison matrix
> # 4. Computing fuzzy weights for the fuzzy pairwise comparison matrix
> computeFuzzyWeightsForValues <- function(alternativeMatrixValues, nrOfRowsAndCol) {
+   # 1. Creates a matrix from the received values
+   newMatrix = matrix(alternativeMatrixValues, nrow = nrOfRowsAndCol, ncol = nrOfRowsAndCol, byrow = TRUE)
+   
+   # 2. Turns the matrix into a pairwise comparison matrix
+   newPairwiseComparisonMatrix = pairwiseComparisonMatrix(newMatrix)
+   
+   # Computing consistency ratio of the criteria pairwise comparison
+   #consistencyRatioValue = consistencyRatio(newPairwiseComparisonMatrix, print.report = TRUE)
+   #print(consistencyRatioValue)
+   
+   # 3. Fuzzyfying the pairwise comparison matrix
+   fuzzyPairwiseComparisonMatrix = fuzzyPairwiseComparisonMatrix(newPairwiseComparisonMatrix)
+   print(fuzzyPairwiseComparisonMatrix)
+   
+   # 4. Computing fuzzy weights for the fuzzy pairwise comparison matrix
+   fuzzyWeights = calculateWeights(fuzzyPairwiseComparisonMatrix)
+   print(fuzzyWeights)
+   result <- fuzzyWeights
+ }
> 
> ### Helper functions end here ###
> 
> 
> 
> ### AHP structure ###
> # Goal: Pick the best workflow configuration
> 
> # Criterias:
> #   C1 = Execution time
> #   C2 = Privacy
> #   C3 = Cost
> #   C4 = Network Bandwidth
> 
> # Alternatives:
> # Workflow 1:  (f1 @ C) (f2 @ C) (f3 @ C) (f4 @ C) (f5 @ C)
> # Workflow 2:  (f1 @ E) (f2 @ C) (f3 @ C) (f4 @ C) (f5 @ C)
> # Workflow 3:  (f1 @ C) (f2 @ C) (f3 @ C) (f4 @ C | f5 @ C)
> # Workflow 4:  (f1 @ E) (f2 @ C) (f3 @ C) (f4 @ C | f5 @ C)
> # Workflow 5:  (f1 @ C) (f2 @ C) (f3 @ C | f4 @ C) (f5 @ C)
> # Workflow 6:  (f1 @ E) (f2 @ C) (f3 @ C | f4 @ C) (f5 @ C)
> # Workflow 7:  (f1 @ C) (f2 @ C) (f3 @ C | f4 @ C | f5 @ C)
> # Workflow 8:  (f1 @ E) (f2 @ C) (f3 @ C | f4 @ C | f5 @ C)
> # Workflow 9:  (f1 @ C) (f2 @ C | f3 @ C) (f4 @ C) (f5 @ C)
> # Workflow 10: (f1 @ E) (f2 @ C | f3 @ C) (f4 @ C) (f5 @ C)
> # Workflow 11: (f1 @ C) (f2 @ C | f3 @ C) (f4 @ C | f5 @ C)
> # Workflow 12: (f1 @ E) (f2 @ C | f3 @ C) (f4 @ C | f5 @ C)
> # Workflow 13: (f1 @ C) (f2 @ C | f3 @ C | f4 @ C) (f5 @ C)
> # Workflow 14: (f1 @ E) (f2 @ C | f3 @ C | f4 @ C) (f5 @ C)
> # Workflow 15: (f1 @ C) (f2 @ C | f3 @ C | f4 @ C | f5 @ C)
> # Workflow 16: (f1 @ E) (f2 @ C | f3 @ C | f4 @ C | f5 @ C)
> # Workflow 17: (f1 @ C | f2 @ C) (f3 @ C) (f4 @ C) (f5 @ C)
> # Workflow 18: (f1 @ C | f2 @ C) (f3 @ C) (f4 @ C | f5 @ C)
> # Workflow 19: (f1 @ C | f2 @ C) (f3 @ C | f4 @ C) (f5 @ C)
> # Workflow 20: (f1 @ C | f2 @ C) (f3 @ C | f4 @ C | f5 @ C)
> # Workflow 21: (f1 @ C | f2 @ C | f3 @ C) (f4 @ C) (f5 @ C)
> # Workflow 22: (f1 @ C | f2 @ C | f3 @ C) (f4 @ C | f5 @ C)
> # Workflow 23: (f1 @ C | f2 @ C | f3 @ C | f4 @ C) (f5 @ C)
> # Workflow 24: (f1 @ C | f2 @ C | f3 @ C | f4 @ C | f5 @ C)
> 
> 
> ### Initialization ###
> 
> citation("FuzzyAHP")

Caha J, Drážná A (2018). _Information about FuzzyAHP package for R (ver.0.9.1)_. R package version 0.9.1, <URL: http://github.com/JanCaha/FuzzyAHP/>.

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {Information about FuzzyAHP package for R (ver.0.9.1)},
    author = {Jan Caha and Aneta Drážná},
    year = {2018},
    note = {R package version 0.9.1},
    url = {http://github.com/JanCaha/FuzzyAHP/},
  }

> require(FuzzyAHP)
> 
> 
> # Pairwise comparison for the three different scenarios
> # Scenario 1: Focus on execution time
> scenarioOneCriteriaMatrixValues = c("1",   "7", "7", "7",
+                                     "1/7", "1", "1", "1",
+                                     "1/7", "1", "1", "1", 
+                                     "1/7", "1", "1", "1")
> 
> # Scenario 2: Focus on cost
> scenarioTwoCriteriaMatrixValues = c("1", "1", "1/7", "1",
+                                     "1", "1", "1/7", "1",
+                                     "7", "7", "1",   "7", 
+                                     "1", "1", "1/7", "1")
> 
> # Scenario 3: Focus on privacy
> scenarioThreeCriteriaMatrixValues = c("1", "1/7", "1", "1",
+                                       "7", "1", "7", "7",
+                                       "1", "1/7", "1", "1", 
+                                       "1", "1/7", "1", "1")
> 
> # Scenario 4: Focus on multiple criteria
> scenarioFourCriteriaMatrixValues = c("1",   "1",   "1",   "5",
+                                      "1",   "1",   "1",   "5",
+                                      "1",   "1",   "1",   "5", 
+                                      "1/5", "1/5", "1/5", "1")
> 
> # Alternative pairwise comparison in respect to each criteria
> executionTimeComparisonMatrixValues = c("1", "1/8", "2", "1/6", "2", "1/6", "2", "1/6", "2", "1/6", "2", "1/6", "2", "1/6", "2", "1/6", "1", "2", "2", "2", "2", "2", "2", "2", 
+                                         "8", "1", "9", "2", "9", "2", "9", "2", "9", "2", "9", "2", "9", "2", "9", "2", "8", "9", "9", "9", "9", "9", "9", "9", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "6", "1/2", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "6", "8", "8", "8", "8", "8", "8", "8", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "6", "1/2", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "6", "8", "8", "8", "8", "8", "8", "8", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "6", "1/2", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "6", "8", "8", "8", "8", "8", "8", "8", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "6", "1/2", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "6", "8", "8", "8", "8", "8", "8", "8", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "6", "1/2", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "6", "8", "8", "8", "8", "8", "8", "8", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "6", "1/2", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "6", "8", "8", "8", "8", "8", "8", "8", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "6", "1/2", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "8", "1", "6", "8", "8", "8", "8", "8", "8", "8", 
+                                         "1", "1/8", "2", "1/6", "2", "1/6", "2", "1/6", "2", "1/6", "2", "1/6", "2", "1/6", "2", "1/6", "1", "2", "2", "2", "2", "2", "2", "2", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1", 
+                                         "1/2", "1/9", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1", "1/8", "1/2", "1", "1", "1", "1", "1", "1", "1")
> 
> privacyComparisonMatrixValues = c("1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", "1/9", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                   "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "9", "1", "1", "1", "1", "1", "1", "1", "1")
> 
> costComparisonMatrixValues = c("1", "1/4", "1/2", "1/6", "1/2", "1/6", "1/4", "1/8", "1/2", "1/6", "1/4", "1/8", "1/4", "1/8", "1/6", "1/9", "1/2", "1/4", "1/4", "1/6", "1/4", "1/6", "1/6", "1/8", 
+                                "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "2", "1", "1", "1/2", "1", "1/2", "1/2", "1/4", 
+                                "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "1", "1/4", "1/2", "1/6", "1/2", "1/6", "1/4", "1/8", "1", "1/2", "1/2", "1/4", "1/2", "1/4", "1/4", "1/6", 
+                                "6", "2", "4", "1", "4", "1", "2", "1/2", "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "4", "2", "2", "1", "2", "1", "1", "1/2", 
+                                "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "1", "1/4", "1/2", "1/6", "1/2", "1/6", "1/4", "1/8", "1", "1/2", "1/2", "1/4", "1/2", "1/4", "1/4", "1/6", 
+                                "6", "2", "4", "1", "4", "1", "2", "1/2", "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "4", "2", "2", "1", "2", "1", "1", "1/2", 
+                                "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "2", "1", "1", "1/2", "1", "1/2", "1/2", "1/4", 
+                                "8", "4", "6", "2", "6", "2", "4", "1", "6", "2", "4", "1", "4", "1", "2", "1/2", "6", "4", "4", "2", "4", "2", "2", "1", 
+                                "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "1", "1/4", "1/2", "1/6", "1/2", "1/6", "1/4", "1/8", "1", "1/2", "1/2", "1/4", "1/2", "1/4", "1/4", "1/6", 
+                                "6", "2", "4", "1", "4", "1", "2", "1/2", "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "4", "2", "2", "1", "2", "1", "1", "1/2", 
+                                "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "2", "1", "1", "1/2", "1", "1/2", "1/2", "1/4", 
+                                "8", "4", "6", "2", "6", "2", "4", "1", "6", "2", "4", "1", "4", "1", "2", "1/2", "6", "4", "4", "2", "4", "2", "2", "1", 
+                                "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "2", "1", "1", "1/2", "1", "1/2", "1/2", "1/4", 
+                                "8", "4", "6", "2", "6", "2", "4", "1", "6", "2", "4", "1", "4", "1", "2", "1/2", "6", "4", "4", "2", "4", "2", "2", "1", 
+                                "6", "2", "4", "1", "4", "1", "2", "1/2", "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "4", "2", "2", "1", "2", "1", "1", "1/2", 
+                                "9", "6", "8", "4", "8", "4", "6", "2", "8", "4", "6", "2", "6", "2", "4", "1", "8", "6", "6", "4", "6", "4", "4", "2", 
+                                "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "1", "1/4", "1/2", "1/6", "1/2", "1/6", "1/4", "1/8", "1", "1/2", "1/2", "1/4", "1/2", "1/4", "1/4", "1/6", 
+                                "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "2", "1", "1", "1/2", "1", "1/2", "1/2", "1/4", 
+                                "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "2", "1", "1", "1/2", "1", "1/2", "1/2", "1/4", 
+                                "6", "2", "4", "1", "4", "1", "2", "1/2", "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "4", "2", "2", "1", "2", "1", "1", "1/2", 
+                                "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "2", "1/2", "1", "1/4", "1", "1/4", "1/2", "1/6", "2", "1", "1", "1/2", "1", "1/2", "1/2", "1/4", 
+                                "6", "2", "4", "1", "4", "1", "2", "1/2", "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "4", "2", "2", "1", "2", "1", "1", "1/2", 
+                                "6", "2", "4", "1", "4", "1", "2", "1/2", "4", "1", "2", "1/2", "2", "1/2", "1", "1/4", "4", "2", "2", "1", "2", "1", "1", "1/2", 
+                                "8", "4", "6", "2", "6", "2", "4", "1", "6", "2", "4", "1", "4", "1", "2", "1/2", "6", "4", "4", "2", "4", "2", "2", "1")
> 
> networkBandwidthComparisonMatrixValues = c("1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
+                                            "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1")
> 
> 
> ### Computing weights ###
> # Computing criteria weights
> scenarioOneFuzzyCriteriaWeights = computeFuzzyWeightsForValues(scenarioOneCriteriaMatrixValues, 4)
              C_1       C_2       C_3       C_4
C_1       (1;1;1)   (6;7;8)   (6;7;8)   (6;7;8)
C_2 (1/8;1/7;1/6)   (1;1;1) (1/2;1;2) (1/2;1;2)
C_3 (1/8;1/7;1/6) (1/2;1;2)   (1;1;1) (1/2;1;2)
C_4 (1/8;1/7;1/6) (1/2;1;2) (1/2;1;2)   (1;1;1)
   [,1]                 
w1 "(0.6578;0.7;0.7193)"
w2 "(0.0636;0.1;0.155)" 
w3 "(0.0636;0.1;0.155)" 
w4 "(0.0636;0.1;0.155)" 
> scenarioTwoFuzzyCriteriaWeights = computeFuzzyWeightsForValues(scenarioTwoCriteriaMatrixValues, 4)
          C_1       C_2           C_3       C_4
C_1   (1;1;1) (1/2;1;2) (1/8;1/7;1/6) (1/2;1;2)
C_2 (1/2;1;2)   (1;1;1) (1/8;1/7;1/6) (1/2;1;2)
C_3   (6;7;8)   (6;7;8)       (1;1;1)   (6;7;8)
C_4 (1/2;1;2) (1/2;1;2) (1/8;1/7;1/6)   (1;1;1)
   [,1]                 
w1 "(0.0663;0.1;0.1486)"
w2 "(0.0663;0.1;0.1486)"
w3 "(0.6578;0.7;0.7193)"
w4 "(0.0636;0.1;0.155)" 
> scenarioThreeFuzzyCriteriaWeights = computeFuzzyWeightsForValues(scenarioThreeCriteriaMatrixValues, 4)
          C_1           C_2       C_3       C_4
C_1   (1;1;1) (1/8;1/7;1/6) (1/2;1;2) (1/2;1;2)
C_2   (6;7;8)       (1;1;1)   (6;7;8)   (6;7;8)
C_3 (1/2;1;2) (1/8;1/7;1/6)   (1;1;1) (1/2;1;2)
C_4 (1/2;1;2) (1/8;1/7;1/6) (1/2;1;2)   (1;1;1)
   [,1]                 
w1 "(0.0636;0.1;0.155)" 
w2 "(0.6578;0.7;0.7193)"
w3 "(0.0663;0.1;0.1486)"
w4 "(0.0663;0.1;0.1486)"
> scenarioFourFuzzyCriteriaWeights = computeFuzzyWeightsForValues(scenarioFourCriteriaMatrixValues, 4)
              C_1           C_2           C_3     C_4
C_1       (1;1;1)     (1/2;1;2)     (1/2;1;2) (4;5;6)
C_2     (1/2;1;2)       (1;1;1)     (1/2;1;2) (4;5;6)
C_3     (1/2;1;2)     (1/2;1;2)       (1;1;1) (4;5;6)
C_4 (1/6;1/5;1/4) (1/6;1/5;1/4) (1/6;1/5;1/4) (1;1;1)
   [,1]                    
w1 "(0.1974;0.3125;0.4474)"
w2 "(0.1974;0.3125;0.4474)"
w3 "(0.1974;0.3125;0.4474)"
w4 "(0.0507;0.0625;0.0742)"
> 
> 
> 
> # Computing alternative weights
> fuzzyExecutionTimeWeights = computeFuzzyWeightsForValues(executionTimeComparisonMatrixValues, 24)
             C_1           C_2       C_3           C_4       C_5           C_6       C_7           C_8       C_9          C_10      C_11          C_12      C_13          C_14      C_15
C_1      (1;1;1) (1/9;1/8;1/7)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3)
C_2      (7;8;9)       (1;1;1)   (8;9;9)       (1;2;3)   (8;9;9)       (1;2;3)   (8;9;9)       (1;2;3)   (8;9;9)       (1;2;3)   (8;9;9)       (1;2;3)   (8;9;9)       (1;2;3)   (8;9;9)
C_3  (1/3;1/2;1) (1/9;1/9;1/8)   (1;1;1) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_4      (5;6;7)   (1/3;1/2;1)   (7;8;9)       (1;1;1)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)
C_5  (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7)   (1;1;1) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_6      (5;6;7)   (1/3;1/2;1)   (7;8;9)     (1/2;1;2)   (7;8;9)       (1;1;1)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)
C_7  (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7)   (1;1;1) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_8      (5;6;7)   (1/3;1/2;1)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)       (1;1;1)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)
C_9  (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7)   (1;1;1) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_10     (5;6;7)   (1/3;1/2;1)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)       (1;1;1)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)
C_11 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7)   (1;1;1) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_12     (5;6;7)   (1/3;1/2;1)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)       (1;1;1)   (7;8;9)     (1/2;1;2)   (7;8;9)
C_13 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7)   (1;1;1) (1/9;1/8;1/7) (1/2;1;2)
C_14     (5;6;7)   (1/3;1/2;1)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)       (1;1;1)   (7;8;9)
C_15 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7)   (1;1;1)
C_16     (5;6;7)   (1/3;1/2;1)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)     (1/2;1;2)   (7;8;9)
C_17   (1/2;1;2) (1/9;1/8;1/7)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3) (1/7;1/6;1/5)   (1;2;3)
C_18 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_19 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_20 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_21 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_22 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_23 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
C_24 (1/3;1/2;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2) (1/9;1/8;1/7) (1/2;1;2)
              C_16        C_17      C_18      C_19      C_20      C_21      C_22      C_23      C_24
C_1  (1/7;1/6;1/5)   (1/2;1;2)   (1;2;3)   (1;2;3)   (1;2;3)   (1;2;3)   (1;2;3)   (1;2;3)   (1;2;3)
C_2        (1;2;3)     (7;8;9)   (8;9;9)   (8;9;9)   (8;9;9)   (8;9;9)   (8;9;9)   (8;9;9)   (8;9;9)
C_3  (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_4      (1/2;1;2)     (5;6;7)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)
C_5  (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_6      (1/2;1;2)     (5;6;7)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)
C_7  (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_8      (1/2;1;2)     (5;6;7)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)
C_9  (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_10     (1/2;1;2)     (5;6;7)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)
C_11 (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_12     (1/2;1;2)     (5;6;7)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)
C_13 (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_14     (1/2;1;2)     (5;6;7)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)
C_15 (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_16       (1;1;1)     (5;6;7)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)   (7;8;9)
C_17 (1/7;1/6;1/5)     (1;1;1)   (1;2;3)   (1;2;3)   (1;2;3)   (1;2;3)   (1;2;3)   (1;2;3)   (1;2;3)
C_18 (1/9;1/8;1/7) (1/3;1/2;1)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_19 (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_20 (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_21 (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_22 (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2)
C_23 (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2)
C_24 (1/9;1/8;1/7) (1/3;1/2;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1)
    [,1]                    
w1  "(0.0121;0.0204;0.0289)"
w2  "(0.097;0.1311;0.1495)" 
w3  "(0.0072;0.0117;0.0195)"
w4  "(0.0697;0.0948;0.1269)"
w5  "(0.0072;0.0117;0.0195)"
w6  "(0.0697;0.0948;0.127)" 
w7  "(0.0072;0.0117;0.0194)"
w8  "(0.0696;0.0948;0.1271)"
w9  "(0.0073;0.0117;0.0194)"
w10 "(0.0695;0.0948;0.1272)"
w11 "(0.0073;0.0117;0.0194)"
w12 "(0.0695;0.0948;0.1273)"
w13 "(0.0073;0.0117;0.0194)"
w14 "(0.0694;0.0948;0.1274)"
w15 "(0.0073;0.0117;0.0194)"
w16 "(0.0694;0.0948;0.1276)"
w17 "(0.0122;0.0204;0.0287)"
w18 "(0.0073;0.0117;0.0193)"
w19 "(0.0073;0.0117;0.0193)"
w20 "(0.0073;0.0117;0.0193)"
w21 "(0.0073;0.0117;0.0193)"
w22 "(0.0073;0.0117;0.0193)"
w23 "(0.0073;0.0117;0.0193)"
w24 "(0.0073;0.0117;0.0193)"
> fuzzyPrivacyWeights = computeFuzzyWeightsForValues(privacyComparisonMatrixValues, 24)
               C_1       C_2           C_3       C_4           C_5       C_6           C_7       C_8           C_9      C_10          C_11      C_12          C_13      C_14          C_15
C_1        (1;1;1)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_2  (1/9;1/9;1/8)   (1;1;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)
C_3      (1/2;1;2)   (8;9;9)       (1;1;1)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_4  (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)   (1;1;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)
C_5      (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)       (1;1;1)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_6  (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)   (1;1;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)
C_7      (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)       (1;1;1)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_8  (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)   (1;1;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)
C_9      (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)       (1;1;1)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_10 (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)   (1;1;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)
C_11     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)       (1;1;1)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_12 (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)   (1;1;1) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)
C_13     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)       (1;1;1)   (8;9;9)     (1/2;1;2)
C_14 (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)   (1;1;1) (1/9;1/9;1/8)
C_15     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)       (1;1;1)
C_16 (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8) (1/2;1;2) (1/9;1/9;1/8)
C_17     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_18     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_19     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_20     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_21     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_22     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_23     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
C_24     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)   (8;9;9)     (1/2;1;2)
          C_16          C_17          C_18          C_19          C_20          C_21          C_22          C_23          C_24
C_1    (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_2  (1/2;1;2) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8)
C_3    (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_4  (1/2;1;2) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8)
C_5    (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_6  (1/2;1;2) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8)
C_7    (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_8  (1/2;1;2) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8)
C_9    (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_10 (1/2;1;2) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8)
C_11   (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_12 (1/2;1;2) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8)
C_13   (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_14 (1/2;1;2) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8)
C_15   (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_16   (1;1;1) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8) (1/9;1/9;1/8)
C_17   (8;9;9)       (1;1;1)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_18   (8;9;9)     (1/2;1;2)       (1;1;1)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_19   (8;9;9)     (1/2;1;2)     (1/2;1;2)       (1;1;1)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_20   (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)       (1;1;1)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_21   (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)       (1;1;1)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)
C_22   (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)       (1;1;1)     (1/2;1;2)     (1/2;1;2)
C_23   (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)       (1;1;1)     (1/2;1;2)
C_24   (8;9;9)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)     (1/2;1;2)       (1;1;1)
    [,1]                    
w1  "(0.0359;0.0592;0.0901)"
w2  "(0.0052;0.0066;0.0086)"
w3  "(0.0359;0.0592;0.0901)"
w4  "(0.0052;0.0066;0.0086)"
w5  "(0.0359;0.0592;0.09)"  
w6  "(0.0052;0.0066;0.0086)"
w7  "(0.0359;0.0592;0.09)"  
w8  "(0.0052;0.0066;0.0086)"
w9  "(0.0359;0.0592;0.09)"  
w10 "(0.0052;0.0066;0.0086)"
w11 "(0.0359;0.0592;0.0899)"
w12 "(0.0052;0.0066;0.0086)"
w13 "(0.036;0.0592;0.0899)" 
w14 "(0.0052;0.0066;0.0086)"
w15 "(0.036;0.0592;0.0899)" 
w16 "(0.0052;0.0066;0.0086)"
w17 "(0.036;0.0592;0.0899)" 
w18 "(0.036;0.0592;0.0899)" 
w19 "(0.036;0.0592;0.0899)" 
w20 "(0.036;0.0592;0.0899)" 
w21 "(0.036;0.0592;0.0899)" 
w22 "(0.036;0.0592;0.0899)" 
w23 "(0.036;0.0592;0.0899)" 
w24 "(0.036;0.0592;0.0899)" 
> fuzzyCostWeights = computeFuzzyWeightsForValues(costComparisonMatrixValues, 24)
         C_1           C_2         C_3           C_4         C_5           C_6           C_7           C_8         C_9          C_10          C_11          C_12          C_13
C_1  (1;1;1) (1/5;1/4;1/3) (1/3;1/2;1) (1/7;1/6;1/5) (1/3;1/2;1) (1/7;1/6;1/5) (1/5;1/4;1/3) (1/9;1/8;1/7) (1/3;1/2;1) (1/7;1/6;1/5) (1/5;1/4;1/3) (1/9;1/8;1/7) (1/5;1/4;1/3)
C_2  (3;4;5)       (1;1;1)     (1;2;3)   (1/3;1/2;1)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1/2;1;2)
C_3  (1;2;3)   (1/3;1/2;1)     (1;1;1) (1/5;1/4;1/3)   (1/2;1;2) (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)   (1/2;1;2) (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)   (1/3;1/2;1)
C_4  (5;6;7)       (1;2;3)     (3;4;5)       (1;1;1)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)       (1;2;3)
C_5  (1;2;3)   (1/3;1/2;1)   (1/2;1;2) (1/5;1/4;1/3)     (1;1;1) (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)   (1/2;1;2) (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)   (1/3;1/2;1)
C_6  (5;6;7)       (1;2;3)     (3;4;5)     (1/2;1;2)     (3;4;5)       (1;1;1)       (1;2;3)   (1/3;1/2;1)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)       (1;2;3)
C_7  (3;4;5)     (1/2;1;2)     (1;2;3)   (1/3;1/2;1)     (1;2;3)   (1/3;1/2;1)       (1;1;1) (1/5;1/4;1/3)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1/2;1;2)
C_8  (7;8;9)       (3;4;5)     (5;6;7)       (1;2;3)     (5;6;7)       (1;2;3)       (3;4;5)       (1;1;1)     (5;6;7)       (1;2;3)       (3;4;5)     (1/2;1;2)       (3;4;5)
C_9  (1;2;3)   (1/3;1/2;1)   (1/2;1;2) (1/5;1/4;1/3)   (1/2;1;2) (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)     (1;1;1) (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)   (1/3;1/2;1)
C_10 (5;6;7)       (1;2;3)     (3;4;5)     (1/2;1;2)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)     (3;4;5)       (1;1;1)       (1;2;3)   (1/3;1/2;1)       (1;2;3)
C_11 (3;4;5)     (1/2;1;2)     (1;2;3)   (1/3;1/2;1)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1;2;3)   (1/3;1/2;1)       (1;1;1) (1/5;1/4;1/3)     (1/2;1;2)
C_12 (7;8;9)       (3;4;5)     (5;6;7)       (1;2;3)     (5;6;7)       (1;2;3)       (3;4;5)     (1/2;1;2)     (5;6;7)       (1;2;3)       (3;4;5)       (1;1;1)       (3;4;5)
C_13 (3;4;5)     (1/2;1;2)     (1;2;3)   (1/3;1/2;1)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)       (1;1;1)
C_14 (7;8;9)       (3;4;5)     (5;6;7)       (1;2;3)     (5;6;7)       (1;2;3)       (3;4;5)     (1/2;1;2)     (5;6;7)       (1;2;3)       (3;4;5)     (1/2;1;2)       (3;4;5)
C_15 (5;6;7)       (1;2;3)     (3;4;5)     (1/2;1;2)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)       (1;2;3)
C_16 (8;9;9)       (5;6;7)     (7;8;9)       (3;4;5)     (7;8;9)       (3;4;5)       (5;6;7)       (1;2;3)     (7;8;9)       (3;4;5)       (5;6;7)       (1;2;3)       (5;6;7)
C_17 (1;2;3)   (1/3;1/2;1)   (1/2;1;2) (1/5;1/4;1/3)   (1/2;1;2) (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)   (1/2;1;2) (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)   (1/3;1/2;1)
C_18 (3;4;5)     (1/2;1;2)     (1;2;3)   (1/3;1/2;1)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1/2;1;2)
C_19 (3;4;5)     (1/2;1;2)     (1;2;3)   (1/3;1/2;1)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1/2;1;2)
C_20 (5;6;7)       (1;2;3)     (3;4;5)     (1/2;1;2)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)       (1;2;3)
C_21 (3;4;5)     (1/2;1;2)     (1;2;3)   (1/3;1/2;1)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1;2;3)   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (1/2;1;2)
C_22 (5;6;7)       (1;2;3)     (3;4;5)     (1/2;1;2)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)       (1;2;3)
C_23 (5;6;7)       (1;2;3)     (3;4;5)     (1/2;1;2)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)     (3;4;5)     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)       (1;2;3)
C_24 (7;8;9)       (3;4;5)     (5;6;7)       (1;2;3)     (5;6;7)       (1;2;3)       (3;4;5)     (1/2;1;2)     (5;6;7)       (1;2;3)       (3;4;5)     (1/2;1;2)       (3;4;5)
              C_14          C_15          C_16        C_17          C_18          C_19          C_20          C_21          C_22          C_23          C_24
C_1  (1/9;1/8;1/7) (1/7;1/6;1/5) (1/9;1/9;1/8) (1/3;1/2;1) (1/5;1/4;1/3) (1/5;1/4;1/3) (1/7;1/6;1/5) (1/5;1/4;1/3) (1/7;1/6;1/5) (1/7;1/6;1/5) (1/9;1/8;1/7)
C_2  (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)     (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)     (1/2;1;2)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)
C_3  (1/7;1/6;1/5) (1/5;1/4;1/3) (1/9;1/8;1/7)   (1/2;1;2)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)   (1/3;1/2;1) (1/5;1/4;1/3) (1/5;1/4;1/3) (1/7;1/6;1/5)
C_4    (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (3;4;5)       (1;2;3)       (1;2;3)     (1/2;1;2)       (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)
C_5  (1/7;1/6;1/5) (1/5;1/4;1/3) (1/9;1/8;1/7)   (1/2;1;2)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)   (1/3;1/2;1) (1/5;1/4;1/3) (1/5;1/4;1/3) (1/7;1/6;1/5)
C_6    (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (3;4;5)       (1;2;3)       (1;2;3)     (1/2;1;2)       (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)
C_7  (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)     (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)     (1/2;1;2)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)
C_8      (1/2;1;2)       (1;2;3)   (1/3;1/2;1)     (5;6;7)       (3;4;5)       (3;4;5)       (1;2;3)       (3;4;5)       (1;2;3)       (1;2;3)     (1/2;1;2)
C_9  (1/7;1/6;1/5) (1/5;1/4;1/3) (1/9;1/8;1/7)   (1/2;1;2)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)   (1/3;1/2;1) (1/5;1/4;1/3) (1/5;1/4;1/3) (1/7;1/6;1/5)
C_10   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (3;4;5)       (1;2;3)       (1;2;3)     (1/2;1;2)       (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)
C_11 (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)     (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)     (1/2;1;2)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)
C_12     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)     (5;6;7)       (3;4;5)       (3;4;5)       (1;2;3)       (3;4;5)       (1;2;3)       (1;2;3)     (1/2;1;2)
C_13 (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)     (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)     (1/2;1;2)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)
C_14       (1;1;1)       (1;2;3)   (1/3;1/2;1)     (5;6;7)       (3;4;5)       (3;4;5)       (1;2;3)       (3;4;5)       (1;2;3)       (1;2;3)     (1/2;1;2)
C_15   (1/3;1/2;1)       (1;1;1) (1/5;1/4;1/3)     (3;4;5)       (1;2;3)       (1;2;3)     (1/2;1;2)       (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)
C_16       (1;2;3)       (3;4;5)       (1;1;1)     (7;8;9)       (5;6;7)       (5;6;7)       (3;4;5)       (5;6;7)       (3;4;5)       (3;4;5)       (1;2;3)
C_17 (1/7;1/6;1/5) (1/5;1/4;1/3) (1/9;1/8;1/7)     (1;1;1)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)   (1/3;1/2;1) (1/5;1/4;1/3) (1/5;1/4;1/3) (1/7;1/6;1/5)
C_18 (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)     (1;2;3)       (1;1;1)     (1/2;1;2)   (1/3;1/2;1)     (1/2;1;2)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)
C_19 (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)     (1;2;3)     (1/2;1;2)       (1;1;1)   (1/3;1/2;1)     (1/2;1;2)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)
C_20   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (3;4;5)       (1;2;3)       (1;2;3)       (1;1;1)       (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)
C_21 (1/5;1/4;1/3)   (1/3;1/2;1) (1/7;1/6;1/5)     (1;2;3)     (1/2;1;2)     (1/2;1;2)   (1/3;1/2;1)       (1;1;1)   (1/3;1/2;1)   (1/3;1/2;1) (1/5;1/4;1/3)
C_22   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (3;4;5)       (1;2;3)       (1;2;3)     (1/2;1;2)       (1;2;3)       (1;1;1)     (1/2;1;2)   (1/3;1/2;1)
C_23   (1/3;1/2;1)     (1/2;1;2) (1/5;1/4;1/3)     (3;4;5)       (1;2;3)       (1;2;3)     (1/2;1;2)       (1;2;3)     (1/2;1;2)       (1;1;1)   (1/3;1/2;1)
C_24     (1/2;1;2)       (1;2;3)   (1/3;1/2;1)     (5;6;7)       (3;4;5)       (3;4;5)       (1;2;3)       (3;4;5)       (1;2;3)       (1;2;3)       (1;1;1)
    [,1]                    
w1  "(0.0057;0.0072;0.0098)"
w2  "(0.0138;0.0228;0.0386)"
w3  "(0.0084;0.0122;0.019)" 
w4  "(0.0258;0.0445;0.0719)"
w5  "(0.0084;0.0122;0.019)" 
w6  "(0.0258;0.0445;0.0718)"
w7  "(0.0138;0.0228;0.0387)"
w8  "(0.0527;0.0834;0.1171)"
w9  "(0.0084;0.0122;0.0191)"
w10 "(0.0258;0.0445;0.0718)"
w11 "(0.0138;0.0228;0.0388)"
w12 "(0.0529;0.0834;0.1166)"
w13 "(0.0138;0.0228;0.0388)"
w14 "(0.053;0.0834;0.1164)" 
w15 "(0.0258;0.0445;0.0719)"
w16 "(0.1042;0.1399;0.1693)"
w17 "(0.0084;0.0122;0.0192)"
w18 "(0.0137;0.0228;0.0389)"
w19 "(0.0137;0.0228;0.0389)"
w20 "(0.0258;0.0445;0.0719)"
w21 "(0.0137;0.0228;0.039)" 
w22 "(0.0258;0.0445;0.0719)"
w23 "(0.0258;0.0445;0.0719)"
w24 "(0.0535;0.0834;0.1156)"
> fuzzyNetworkBandwidthWeights = computeFuzzyWeightsForValues(networkBandwidthComparisonMatrixValues, 24)
           C_1       C_2       C_3       C_4       C_5       C_6       C_7       C_8       C_9      C_10      C_11      C_12      C_13      C_14      C_15      C_16      C_17      C_18
C_1    (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_2  (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_3  (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_4  (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_5  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_6  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_7  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_8  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_9  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_10 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_11 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_12 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_13 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_14 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_15 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_16 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2)
C_17 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2)
C_18 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1)
C_19 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_20 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_21 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_22 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_23 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_24 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
          C_19      C_20      C_21      C_22      C_23      C_24
C_1  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_2  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_3  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_4  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_5  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_6  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_7  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_8  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_9  (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_10 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_11 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_12 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_13 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_14 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_15 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_16 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_17 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_18 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_19   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_20 (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_21 (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2) (1/2;1;2)
C_22 (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2) (1/2;1;2)
C_23 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1) (1/2;1;2)
C_24 (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2) (1/2;1;2)   (1;1;1)
    [,1]                    
w1  "(0.0198;0.0417;0.0748)"
w2  "(0.0198;0.0417;0.0748)"
w3  "(0.0198;0.0417;0.0748)"
w4  "(0.0198;0.0417;0.0748)"
w5  "(0.0198;0.0417;0.0748)"
w6  "(0.0198;0.0417;0.0748)"
w7  "(0.0198;0.0417;0.0748)"
w8  "(0.0198;0.0417;0.0748)"
w9  "(0.0198;0.0417;0.0748)"
w10 "(0.0198;0.0417;0.0748)"
w11 "(0.0198;0.0417;0.0748)"
w12 "(0.0198;0.0417;0.0748)"
w13 "(0.0198;0.0417;0.0748)"
w14 "(0.0198;0.0417;0.0748)"
w15 "(0.0198;0.0417;0.0748)"
w16 "(0.0198;0.0417;0.0748)"
w17 "(0.0198;0.0417;0.0748)"
w18 "(0.0198;0.0417;0.0748)"
w19 "(0.0198;0.0417;0.0748)"
w20 "(0.0198;0.0417;0.0748)"
w21 "(0.0198;0.0417;0.0748)"
w22 "(0.0198;0.0417;0.0748)"
w23 "(0.0198;0.0417;0.0748)"
w24 "(0.0198;0.0417;0.0748)"
> 
> # Fuzzy weights are converted to Fuzzy data
> fuzzyExecutionTimeData = convertFuzzyWeightsToFuzzyData(fuzzyExecutionTimeWeights)
> fuzzyPrivacyData = convertFuzzyWeightsToFuzzyData(fuzzyPrivacyWeights)
> fuzzyCostData = convertFuzzyWeightsToFuzzyData(fuzzyCostWeights)
> fuzzyNetworkBandwidthData = convertFuzzyWeightsToFuzzyData(fuzzyNetworkBandwidthWeights)
> 
> # Merging the weights together before the final computations
> data = bindColums(fuzzyExecutionTimeData, fuzzyPrivacyData)
> data = bindColums(data, fuzzyCostData)
> data = bindColums(data, fuzzyNetworkBandwidthData)
> 
> scenarioOneResult = calculateAHP(scenarioOneFuzzyCriteriaWeights, data)
> scenarioTwoResult = calculateAHP(scenarioTwoFuzzyCriteriaWeights, data)
> scenarioThreeResult = calculateAHP(scenarioThreeFuzzyCriteriaWeights, data)
> scenarioFourResult = calculateAHP(scenarioFourFuzzyCriteriaWeights, data)
> 
> print(scenarioOneResult)
      [,1]                    
 [1,] "(0.0119;0.0251;0.0479)"
 [2,] "(0.0663;0.0989;0.1265)"
 [3,] "(0.0088;0.0195;0.0425)"
 [4,] "(0.0491;0.0757;0.1154)"
 [5,] "(0.0088;0.0195;0.0425)"
 [6,] "(0.0491;0.0757;0.1154)"
 [7,] "(0.0092;0.0206;0.0455)"
 [8,] "(0.0507;0.0795;0.1225)"
 [9,] "(0.0088;0.0195;0.0425)"
[10,] "(0.049;0.0757;0.1156)" 
[11,] "(0.0092;0.0206;0.0455)"
[12,] "(0.0507;0.0795;0.1226)"
[13,] "(0.0092;0.0206;0.0455)"
[14,] "(0.0506;0.0795;0.1227)"
[15,] "(0.01;0.0228;0.0506)"  
[16,] "(0.0538;0.0852;0.1309)"
[17,] "(0.0121;0.0256;0.0492)"
[18,] "(0.0092;0.0206;0.0455)"
[19,] "(0.0092;0.0206;0.0455)"
[20,] "(0.01;0.0228;0.0506)"  
[21,] "(0.0092;0.0206;0.0455)"
[22,] "(0.01;0.0228;0.0506)"  
[23,] "(0.01;0.0228;0.0506)"  
[24,] "(0.0117;0.0266;0.0574)"
> print(scenarioTwoResult)
      [,1]                    
 [1,] "(0.0082;0.0172;0.0363)"
 [2,] "(0.0171;0.0339;0.0629)"
 [3,] "(0.0097;0.0198;0.0415)"
 [4,] "(0.0232;0.0454;0.0835)"
 [5,] "(0.0096;0.0198;0.0415)"
 [6,] "(0.0232;0.0454;0.0834)"
 [7,] "(0.0132;0.0272;0.0557)"
 [8,] "(0.0409;0.0727;0.116)" 
 [9,] "(0.0096;0.0198;0.0416)"
[10,] "(0.0232;0.0454;0.0834)"
[11,] "(0.0132;0.0272;0.0557)"
[12,] "(0.041;0.0727;0.1157)" 
[13,] "(0.0132;0.0272;0.0558)"
[14,] "(0.0411;0.0727;0.1156)"
[15,] "(0.0211;0.0424;0.0796)"
[16,] "(0.0747;0.1122;0.1536)"
[17,] "(0.0099;0.0206;0.043)" 
[18,] "(0.0131;0.0272;0.0558)"
[19,] "(0.0131;0.0272;0.0558)"
[20,] "(0.0211;0.0424;0.0796)"
[21,] "(0.0131;0.0272;0.0559)"
[22,] "(0.0211;0.0424;0.0795)"
[23,] "(0.0211;0.0424;0.0795)"
[24,] "(0.0393;0.0696;0.111)" 
> print(scenarioThreeResult)
      [,1]                    
 [1,] "(0.0261;0.0484;0.0819)"
 [2,] "(0.0118;0.0242;0.0462)"
 [3,] "(0.026;0.048;0.0817)"  
 [4,] "(0.0109;0.0227;0.0477)"
 [5,] "(0.026;0.048;0.0817)"  
 [6,] "(0.0109;0.0227;0.0477)"
 [7,] "(0.0263;0.0491;0.0846)"
 [8,] "(0.0127;0.0266;0.0544)"
 [9,] "(0.026;0.048;0.0817)"  
[10,] "(0.0109;0.0227;0.0477)"
[11,] "(0.0263;0.0491;0.0846)"
[12,] "(0.0127;0.0266;0.0544)"
[13,] "(0.0263;0.0491;0.0846)"
[14,] "(0.0127;0.0266;0.0544)"
[15,] "(0.0271;0.0512;0.0895)"
[16,] "(0.0161;0.0322;0.0622)"
[17,] "(0.0263;0.0489;0.0831)"
[18,] "(0.0263;0.0491;0.0845)"
[19,] "(0.0263;0.0491;0.0845)"
[20,] "(0.0271;0.0512;0.0894)"
[21,] "(0.0263;0.0491;0.0845)"
[22,] "(0.0271;0.0512;0.0894)"
[23,] "(0.0271;0.0512;0.0894)"
[24,] "(0.029;0.0551;0.0959)" 
> print(scenarioFourResult)
      [,1]                    
 [1,] "(0.0116;0.0297;0.0632)"
 [2,] "(0.0239;0.0527;0.0936)"
 [3,] "(0.0112;0.0286;0.0631)"
 [4,] "(0.0209;0.0482;0.0983)"
 [5,] "(0.0112;0.0286;0.063)" 
 [6,] "(0.0209;0.0482;0.0984)"
 [7,] "(0.0122;0.0319;0.0718)"
 [8,] "(0.0262;0.0603;0.1186)"
 [9,] "(0.0112;0.0286;0.063)" 
[10,] "(0.0208;0.0482;0.0984)"
[11,] "(0.0122;0.0319;0.0718)"
[12,] "(0.0262;0.0603;0.1185)"
[13,] "(0.0122;0.0319;0.0718)"
[14,] "(0.0262;0.0603;0.1185)"
[15,] "(0.0146;0.0387;0.0866)"
[16,] "(0.0363;0.078;0.1422)" 
[17,] "(0.0121;0.0313;0.0672)"
[18,] "(0.0122;0.0319;0.0718)"
[19,] "(0.0122;0.0319;0.0718)"
[20,] "(0.0146;0.0387;0.0866)"
[21,] "(0.0122;0.0319;0.0718)"
[22,] "(0.0146;0.0387;0.0866)"
[23,] "(0.0146;0.0387;0.0866)"
[24,] "(0.0201;0.0508;0.1061)"
> 
> # Defuzzyfy before ranking
> scenarioOneDefuzzified = defuzziffy(scenarioOneResult, "Yager")
> scenarioTwoDefuzzified = defuzziffy(scenarioTwoResult, "Yager")
> scenarioThreeDefuzzified = defuzziffy(scenarioThreeResult, "Yager")
> scenarioFourDefuzzified = defuzziffy(scenarioFourResult, "Yager")
> 
> print(scenarioOneDefuzzified)
            [,1]
 [1,] 0.02826671
 [2,] 0.09720380
 [3,] 0.02362299
 [4,] 0.08004274
 [5,] 0.02362062
 [6,] 0.08004591
 [7,] 0.02510140
 [8,] 0.08426083
 [9,] 0.02361577
[10,] 0.08006653
[11,] 0.02509724
[12,] 0.08426557
[13,] 0.02509524
[14,] 0.08427701
[15,] 0.02777938
[16,] 0.08999679
[17,] 0.02893089
[18,] 0.02508988
[19,] 0.02508988
[20,] 0.02777281
[21,] 0.02509105
[22,] 0.02777094
[23,] 0.02777094
[24,] 0.03191729
> print(scenarioTwoDefuzzified)
            [,1]
 [1,] 0.02057093
 [2,] 0.03795743
 [3,] 0.02365358
 [4,] 0.05069447
 [5,] 0.02365570
 [6,] 0.05068306
 [7,] 0.03202799
 [8,] 0.07651733
 [9,] 0.02366214
[10,] 0.05068767
[11,] 0.03203936
[12,] 0.07644564
[13,] 0.03204673
[14,] 0.07642991
[15,] 0.04767746
[16,] 0.11352087
[17,] 0.02453072
[18,] 0.03206303
[19,] 0.03206303
[20,] 0.04767658
[21,] 0.03206658
[22,] 0.04767169
[23,] 0.04767169
[24,] 0.07332020
> print(scenarioThreeDefuzzified)
            [,1]
 [1,] 0.05210409
 [2,] 0.02740504
 [3,] 0.05189883
 [4,] 0.02708591
 [5,] 0.05189293
 [6,] 0.02708643
 [7,] 0.05333325
 [8,] 0.03122250
 [9,] 0.05188315
[10,] 0.02709467
[11,] 0.05332551
[12,] 0.03121149
[13,] 0.05332275
[14,] 0.03121128
[15,] 0.05594605
[16,] 0.03684817
[17,] 0.05274338
[18,] 0.05331881
[19,] 0.05331881
[20,] 0.05594121
[21,] 0.05331990
[22,] 0.05593947
[23,] 0.05593947
[24,] 0.06001588
> print(scenarioFourDefuzzified)
            [,1]
 [1,] 0.03483445
 [2,] 0.05674088
 [3,] 0.03426812
 [4,] 0.05580871
 [5,] 0.03426493
 [6,] 0.05580833
 [7,] 0.03865217
 [8,] 0.06839020
 [9,] 0.03426065
[10,] 0.05582958
[11,] 0.03865149
[12,] 0.06835352
[13,] 0.03865268
[14,] 0.06835126
[15,] 0.04663473
[16,] 0.08550228
[17,] 0.03686826
[18,] 0.03865640
[19,] 0.03865640
[20,] 0.04662737
[21,] 0.03865970
[22,] 0.04662211
[23,] 0.04662211
[24,] 0.05902558
> 
> scenarioOneRank = compareResults(scenarioOneDefuzzified)
> scenarioTwoRank = compareResults(scenarioTwoDefuzzified)
> scenarioThreeRank = compareResults(scenarioThreeDefuzzified)
> scenarioFourRank = compareResults(scenarioFourDefuzzified)
> 
> print(scenarioOneRank)
      [,1]
 [1,]   11
 [2,]    1
 [3,]   22
 [4,]    8
 [5,]   23
 [6,]    7
 [7,]   16
 [8,]    5
 [9,]   24
[10,]    6
[11,]   17
[12,]    4
[13,]   18
[14,]    3
[15,]   12
[16,]    2
[17,]   10
[18,]   20
[19,]   20
[20,]   13
[21,]   19
[22,]   14
[23,]   14
[24,]    9
> print(scenarioTwoRank)
      [,1]
 [1,]   24
 [2,]   13
 [3,]   23
 [4,]    6
 [5,]   22
 [6,]    8
 [7,]   19
 [8,]    2
 [9,]   21
[10,]    7
[11,]   18
[12,]    3
[13,]   17
[14,]    4
[15,]    9
[16,]    1
[17,]   20
[18,]   15
[19,]   15
[20,]   10
[21,]   14
[22,]   11
[23,]   11
[24,]    5
> print(scenarioThreeRank)
      [,1]
 [1,]   13
 [2,]   21
 [3,]   14
 [4,]   24
 [5,]   15
 [6,]   23
 [7,]    6
 [8,]   18
 [9,]   16
[10,]   22
[11,]    7
[12,]   19
[13,]    8
[14,]   20
[15,]    2
[16,]   17
[17,]   12
[18,]   10
[19,]   10
[20,]    3
[21,]    9
[22,]    4
[23,]    4
[24,]    1
> print(scenarioFourRank)
      [,1]
 [1,]   21
 [2,]    6
 [3,]   22
 [4,]    8
 [5,]   23
 [6,]    9
 [7,]   18
 [8,]    2
 [9,]   24
[10,]    7
[11,]   19
[12,]    3
[13,]   17
[14,]    4
[15,]   10
[16,]    1
[17,]   20
[18,]   15
[19,]   15
[20,]   11
[21,]   14
[22,]   12
[23,]   12
[24,]    5
> 
> #### Evaluation EXAMPLE ENDS HERE ####